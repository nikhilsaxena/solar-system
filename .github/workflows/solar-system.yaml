name: Solar System Workflow

on:
  workflow_dispatch:
  push:
    branches:
     - main
     - 'feature/*'

env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGODB_USER }}
    MONGO_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}

jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
          
        - name: Setup NodeJS Version - 18
          uses: actions/setup-node@v3
          with:
            node-version: 18

        - name: Cache NPM Dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

        - name: Install Dependencies
          run: npm install

        - name: Unit Testing
          run: npm test

        - name: Generate Test Results
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - 18
          uses: actions/setup-node@v3
          with:
            node-version: 18
        
        - name: Cache NPM Dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
  

        - name: Install Dependencies
          run: npm install

        - name: Check Code Coverage
          continue-on-error: true
          run: npm run coverage

        - name: Generate Code Coverage Report
          uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage-Report
            path: coverage
            retention-days: 1

    docker:
        name: Containerization
        needs: [unit-testing, code-coverage]
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

        - name: Build Docker Image
          uses: docker/build-push-action@v6
          with:
            push: false
            context: .
            tags: ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{ github.sha }}

        - name: Docker Image Testing
          run: |
            docker images
            docker run solar-system-app -d \
                -p 3000:3000 \
                -e MONGO_URI=$MONGO_URI \
                -e MONGO_USERNAME=$MONGODB_USERNAME \
                -e MONGO_PASSWORD=$MONGODB_PASSWORD \
                ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{ github.sha }}

            export APP_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
            echo $APP_IP

            echo Testing Image URL using wget
            curl 127.0.0.1:3000/live | grep live